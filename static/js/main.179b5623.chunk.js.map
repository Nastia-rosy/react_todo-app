{"version":3,"sources":["components/TodoList.js","components/TodoFooter.js","App.js","index.js"],"names":["TodoList","todos","handleCompleted","deleteTodo","className","map","todo","key","id","completed","type","name","checked","onChange","htmlFor","title","onClick","TodoFooter","handleCompletedFilter","handleActiveFilter","handleAllFilter","filter","clearCompleted","todosActive","href","App","state","todosCopied","todoTitle","isVisible","handleChangeTitle","event","setState","target","value","handleKeyDown","newTitle","length","newObj","find","handleDeleteTodo","handleClearCompleted","this","placeholder","onKeyDown","handleEditTodo","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.179b5623.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, handleCompleted, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n        className={todo.completed ? 'completed' : ''}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${todo.id}`}\n            name={todo.id}\n            checked={todo.completed}\n            onChange={handleCompleted}\n          />\n          <label\n            htmlFor={`todo-${todo.id}`}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => deleteTodo(todo.id)}\n          />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n  handleCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoFooter = ({\n  handleCompletedFilter,\n  handleActiveFilter,\n  handleAllFilter,\n  filter,\n  clearCompleted,\n  todosActive,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${todosActive} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filter === 'All' ? 'selected' : ''}\n          onClick={handleAllFilter}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={filter === 'Active' ? 'selected' : ''}\n          onClick={handleActiveFilter}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filter === 'Completed' ? 'selected' : ''}\n          onClick={handleCompletedFilter}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={clearCompleted}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nTodoFooter.propTypes = {\n  handleCompletedFilter: PropTypes.func.isRequired,\n  handleActiveFilter: PropTypes.func.isRequired,\n  handleAllFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  todosActive: PropTypes.number.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport TodoFooter from './components/TodoFooter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosCopied: [],\n    todoTitle: '',\n    isVisible: false,\n    filter: 'All',\n    todosActive: 0,\n  }\n\n  handleChangeTitle = (event) => {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      this.setState((state) => {\n        const newTitle = {\n          id: state.todos.length + 1,\n          title: state.todoTitle,\n          completed: false,\n        };\n\n        return {\n          todos: [...state.todos, newTitle],\n          todosCopied: [...state.todos, newTitle],\n          isVisible: true,\n          todoTitle: '',\n          filter: 'All',\n          todosActive: state.todosActive + 1,\n        };\n      });\n    }\n  }\n\n  handleCompleted = (event) => {\n    const { checked, name } = event.target;\n\n    this.setState((state) => {\n      let newObj = state.todos.find(todo => todo.id === +name);\n\n      newObj = {\n        ...newObj,\n        completed: checked,\n      };\n\n      return {\n        todos: [\n          ...state.todos.map((todo) => {\n            if (todo.id === +name) {\n              todo = newObj;// eslint-disable-line no-param-reassign\n            }\n\n            return todo;\n          })],\n        todosCopied: [\n          ...state.todos.map((todo) => {\n            if (todo.id === +name) {\n              todo = newObj;// eslint-disable-line no-param-reassign\n            }\n\n            return todo;\n          })],\n      };\n    });\n  }\n\n  handleCompletedFilter = () => {\n    this.setState(state => ({\n      todos: [...state.todosCopied].filter(todo => todo.completed),\n      filter: 'Completed',\n      todosActive: 0,\n    }));\n  }\n\n  handleActiveFilter = () => {\n    this.setState(state => ({\n      todos: [...state.todosCopied].filter(todo => !todo.completed),\n      filter: 'Active',\n      todosActive: [...state.todosCopied]\n        .filter(todo => !todo.completed).length,\n    }));\n  }\n\n  handleAllFilter = () => {\n    this.setState(state => ({\n      todos: [...state.todosCopied],\n      filter: 'All',\n      todosActive: [...state.todosCopied]\n        .filter(todo => !todo.completed).length,\n    }));\n  }\n\n  handleDeleteTodo = (id) => {\n    this.setState(state => ({\n      todos: [...state.todos.filter(todo => todo.id !== id)],\n      todosCopied: [...state.todosCopied.filter(todo => todo.id !== id)],\n    }));\n  }\n\n  handleClearCompleted = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.completed),\n      todosCopied: state.todosCopied.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const { todos } = this.state;\n    const { todoTitle, isVisible, filter, todosActive } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            value={todoTitle}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChangeTitle}\n            onKeyDown={this.handleKeyDown}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          {isVisible && (\n            <label\n              htmlFor=\"toggle-all\"\n            >\n              Mark all as complete\n            </label>\n          )}\n\n          <TodoList\n            todos={todos}\n            deleteTodo={this.handleDeleteTodo}\n            handleCompleted={this.handleCompleted}\n            handleEditTodo={this.handleEditTodo}\n          />\n        </section>\n\n        {isVisible && (\n          <TodoFooter\n            handleCompletedFilter={this.handleCompletedFilter}\n            handleActiveFilter={this.handleActiveFilter}\n            handleAllFilter={this.handleAllFilter}\n            clearCompleted={this.handleClearCompleted}\n            filter={filter}\n            todosActive={todosActive}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}