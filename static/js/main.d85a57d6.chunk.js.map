{"version":3,"sources":["components/TodoList.js","components/TodoFooter.js","App.js","index.js"],"names":["TodoList","todos","handleCompleted","deleteTodo","className","map","todo","key","id","classnames","completed","type","name","checked","onChange","htmlFor","title","onClick","TodoFooter","filter","clearCompleted","itemsLeft","clearVisibleButton","setFilter","href","selected","event","target","filters","App","state","todosCopied","todoTitle","isVisible","selectedFilter","handleChangeTitle","setState","value","handleCreateNewTodo","preventDefault","newTitle","length","todoCompleted","find","getFilteredTodos","handleDeleteTodo","footerIsVisible","handleClearCompleted","handleCompletedAll","filteredTodos","this","onSubmit","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d85a57d6.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, handleCompleted, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n        className={classnames({ completed: todo.completed })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${todo.id}`}\n            name={todo.id}\n            checked={todo.completed}\n            onChange={handleCompleted}\n          />\n          <label\n            htmlFor={`todo-${todo.id}`}\n          >\n\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => deleteTodo(todo.id)}\n          />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n  handleCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoFooter = ({\n  filter,\n  clearCompleted,\n  itemsLeft,\n  clearVisibleButton,\n  setFilter,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${itemsLeft} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          name=\"All\"\n          className={classnames({ selected: filter === 'All' })}\n          onClick={event => setFilter(event.target.name)}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          name=\"Active\"\n          className={classnames({ selected: filter === 'Active' })}\n          onClick={event => setFilter(event.target.name)}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          name=\"Completed\"\n          className={classnames({ selected: filter === 'Completed' })}\n          onClick={event => setFilter(event.target.name)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {clearVisibleButton && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    )}\n  </footer>\n);\n\nTodoFooter.propTypes = {\n  itemsLeft: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearVisibleButton: PropTypes.bool.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport TodoFooter from './components/TodoFooter';\n\nconst filters = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosCopied: [],\n    todoTitle: '',\n    isVisible: false,\n    selectedFilter: filters.all,\n  }\n\n  handleChangeTitle = (event) => {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  handleCreateNewTodo = (event) => {\n    event.preventDefault();\n    this.setState((state) => {\n      if (state.todoTitle === '') {\n        return false;\n      }\n\n      const newTitle = {\n        id: state.todos.length + 1,\n        title: state.todoTitle,\n        completed: false,\n      };\n\n      return {\n        todos: [...state.todos, newTitle],\n        isVisible: true,\n        todoTitle: '',\n      };\n    });\n  }\n\n  handleCompleted = (event) => {\n    const { checked, name } = event.target;\n\n    this.setState((state) => {\n      const todoCompleted = state.todos.find(todo => todo.id === +name);\n\n      return {\n        todos: [\n          ...state.todos.map((todo) => {\n            if (todo.id === +name) {\n              return {\n                ...todoCompleted,\n                completed: checked,\n              };\n            }\n\n            return todo;\n          })],\n      };\n    });\n  }\n\n  getFilteredTodos = () => {\n    const { selectedFilter, todos } = this.state;\n\n    if (selectedFilter === filters.active) {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    if (selectedFilter === filters.completed) {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  }\n\n  setFilter = (selectedFilter) => {\n    this.setState({\n      selectedFilter,\n    });\n  }\n\n  handleDeleteTodo = (id) => {\n    let footerIsVisible = true;\n\n    if (this.state.todos.length <= 1) {\n      footerIsVisible = false;\n    }\n\n    this.setState(state => ({\n      todos: [...state.todos.filter(todo => todo.id !== id)],\n      isVisible: footerIsVisible,\n    }));\n  }\n\n  handleClearCompleted = () => {\n    let footerIsVisible = true;\n\n    if (this.state.todosCopied.length <= 1) {\n      footerIsVisible = false;\n    }\n\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.completed),\n      isVisible: footerIsVisible,\n    }));\n  }\n\n  handleCompletedAll = () => {\n    this.setState((state) => {\n      let filteredTodos = [...state.todos];\n\n      if (state.todos.length !== state.todos\n        .filter(todo => todo.completed).length) {\n        filteredTodos = [...state.todos].map(todo => ({\n          ...todo,\n          completed: false,\n        }));\n      }\n\n      return {\n        todos: filteredTodos.map(todo => ({\n          ...todo,\n          completed: !todo.completed,\n        })),\n      };\n    });\n  }\n\n  render() {\n    const { todoTitle, isVisible, selectedFilter, todos } = this.state;\n    const filteredTodos = this.getFilteredTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleCreateNewTodo}>\n            <input\n              type=\"text\"\n              value={todoTitle}\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleChangeTitle}\n            />\n          </form>\n\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handleCompletedAll}\n          />\n          {isVisible && (\n            <label\n              htmlFor=\"toggle-all\"\n            >\n              Mark all as complete\n            </label>\n          )}\n\n          <TodoList\n            todos={filteredTodos}\n            deleteTodo={this.handleDeleteTodo}\n            handleCompleted={this.handleCompleted}\n          />\n        </section>\n\n        {isVisible && (\n          <TodoFooter\n            clearCompleted={this.handleClearCompleted}\n            filter={selectedFilter}\n            todos={todos}\n            setFilter={this.setFilter}\n            itemsLeft={todos.filter(todo => !todo.completed).length}\n            clearVisibleButton={todos\n              .filter(todo => todo.completed).length >= 1}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}