{"version":3,"sources":["components/TodoList.js","components/TodoFooter.js","App.js","index.js"],"names":["TodoList","todos","handleCompleted","deleteTodo","className","map","todo","key","id","completed","type","name","checked","onChange","htmlFor","title","onClick","TodoFooter","handleCompletedFilter","handleActiveFilter","handleAllFilter","filter","clearCompleted","itemsLeft","clearVisibleButton","href","filters","App","state","todosCopied","todoTitle","isVisible","handleChangeTitle","event","setState","target","value","handleKeyDown","newTitle","length","todoCompleted","find","handleDeleteTodo","footerIsVisible","handleClearCompleted","handleCompletedAll","filteredTodos","this","placeholder","onKeyDown","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f31c97b1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, handleCompleted, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n        className={todo.completed ? 'completed' : ''}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${todo.id}`}\n            name={todo.id}\n            checked={todo.completed}\n            onChange={handleCompleted}\n          />\n          <label\n            htmlFor={`todo-${todo.id}`}\n          >\n\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => deleteTodo(todo.id)}\n          />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n  handleCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoFooter = ({\n  handleCompletedFilter,\n  handleActiveFilter,\n  handleAllFilter,\n  filter,\n  clearCompleted,\n  itemsLeft,\n  clearVisibleButton,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${itemsLeft} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filter === 'All' ? 'selected' : ''}\n          onClick={handleAllFilter}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={filter === 'Active' ? 'selected' : ''}\n          onClick={handleActiveFilter}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filter === 'Completed' ? 'selected' : ''}\n          onClick={handleCompletedFilter}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {clearVisibleButton && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    )}\n  </footer>\n);\n\nTodoFooter.propTypes = {\n  itemsLeft: PropTypes.number.isRequired,\n  handleCompletedFilter: PropTypes.func.isRequired,\n  handleActiveFilter: PropTypes.func.isRequired,\n  handleAllFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  clearVisibleButton: PropTypes.bool.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport TodoFooter from './components/TodoFooter';\n\nconst filters = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosCopied: [],\n    todoTitle: '',\n    isVisible: false,\n    filter: '',\n  }\n\n  handleChangeTitle = (event) => {\n    this.setState({\n      todoTitle: event.target.value,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      this.setState((state) => {\n        if (state.todoTitle === '') {\n          return false;\n        }\n\n        const newTitle = {\n          id: state.todos.length + 1,\n          title: state.todoTitle,\n          completed: false,\n        };\n\n        return {\n          todos: [...state.todos, newTitle],\n          todosCopied: [...state.todos, newTitle],\n          isVisible: true,\n          todoTitle: '',\n          filter: 'All',\n        };\n      });\n    }\n  }\n\n  handleCompleted = (event) => {\n    const { checked, name } = event.target;\n\n    this.setState((state) => {\n      let todoCompleted = state.todos.find(todo => todo.id === +name);\n\n      todoCompleted = {\n        ...todoCompleted,\n        completed: checked,\n      };\n\n      return {\n        todos: [\n          ...state.todos.map((todo) => {\n            if (todo.id === +name) {\n              todo = todoCompleted;// eslint-disable-line no-param-reassign\n            }\n\n            return todo;\n          })],\n        todosCopied: [\n          ...state.todos.map((todo) => {\n            if (todo.id === +name) {\n              todo = todoCompleted;// eslint-disable-line no-param-reassign\n            }\n\n            return todo;\n          })],\n      };\n    });\n  }\n\n  handleCompletedFilter = () => {\n    this.setState(state => ({\n      todos: [...state.todosCopied].filter(todo => todo.completed),\n      filter: filters.completed,\n    }));\n  }\n\n  handleActiveFilter = () => {\n    this.setState(state => ({\n      todos: [...state.todosCopied].filter(todo => !todo.completed),\n      filter: filters.active,\n    }));\n  }\n\n  handleAllFilter = () => {\n    this.setState(state => ({\n      todos: [...state.todosCopied],\n      filter: filters.all,\n    }));\n  }\n\n  handleDeleteTodo = (id) => {\n    let footerIsVisible = true;\n\n    if (this.state.todosCopied.length <= 1) {\n      footerIsVisible = false;\n    }\n\n    this.setState(state => ({\n      todos: [...state.todos.filter(todo => todo.id !== id)],\n      todosCopied: [...state.todosCopied.filter(todo => todo.id !== id)],\n      isVisible: footerIsVisible,\n    }));\n  }\n\n  handleClearCompleted = () => {\n    let footerIsVisible = true;\n\n    if (this.state.todosCopied.length <= 1) {\n      footerIsVisible = false;\n    }\n\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.completed),\n      todosCopied: state.todosCopied.filter(todo => !todo.completed),\n      isVisible: footerIsVisible,\n    }));\n  }\n\n  handleCompletedAll = () => {\n    this.setState((state) => {\n      let filteredTodos = [...state.todos];\n\n      if (state.todos.length !== state.todos\n        .filter(todo => todo.completed).length) {\n        filteredTodos = [...state.todos].map(todo => ({\n          ...todo,\n          completed: false,\n        }));\n      }\n\n      return {\n        todos: filteredTodos.map(todo => ({\n          ...todo,\n          completed: !todo.completed,\n        })),\n      };\n    });\n  }\n\n  render() {\n    const { todoTitle, isVisible, filter, todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            value={todoTitle}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChangeTitle}\n            onKeyDown={this.handleKeyDown}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handleCompletedAll}\n          />\n          {isVisible && (\n            <label\n              htmlFor=\"toggle-all\"\n            >\n              Mark all as complete\n            </label>\n          )}\n\n          <TodoList\n            todos={todos}\n            deleteTodo={this.handleDeleteTodo}\n            handleCompleted={this.handleCompleted}\n          />\n        </section>\n\n        {isVisible && (\n          <TodoFooter\n            handleCompletedFilter={this.handleCompletedFilter}\n            handleActiveFilter={this.handleActiveFilter}\n            handleAllFilter={this.handleAllFilter}\n            clearCompleted={this.handleClearCompleted}\n            filter={filter}\n            todos={todos}\n            itemsLeft={todos.filter(todo => !todo.completed).length}\n            clearVisibleButton={todos\n              .filter(todo => todo.completed).length >= 1}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}